/* USER CODE BEGIN Header */ 
/** 
  ************************************************************************** 
  * @file           : main.c 
  * @brief          : Main program body 
  ************************************************************************** 
  * @attention 
  * 
  * Copyright (c) 2023 STMicroelectronics. 
  * All rights reserved. 
  * 
  * This software is licensed under terms that can be found in the LICENSE file 
  * in the root directory of this software component. 
  * If no LICENSE file comes with this software, it is provided AS-IS. 
  * 
  ************************************************************************** 
  */ 
/* USER CODE END Header */ 
/* Includes ------------------------------------------------------------------*/ 
#include "main.h" 
#include <stdio.h> 
#include <string.h> 
 
/* Private includes ----------------------------------------------------------*/ 
/* USER CODE BEGIN Includes */ 
 
/* USER CODE END Includes */ 
 
/* Private typedef -----------------------------------------------------------*/ 
/* USER CODE BEGIN PTD */ 
 
/* USER CODE END PTD */ 
 
/* Private define ------------------------------------------------------------*/ 
/* USER CODE BEGIN PD */ 
 
/* USER CODE END PD */ 
 
/* Private macro -------------------------------------------------------------*/ 
/* USER CODE BEGIN PM */ 
 
/* USER CODE END PM */ 
 
/* Private variables ---------------------------------------------------------*/ 
RTC_HandleTypeDef hrtc; 
 
UART_HandleTypeDef huart2; 
 
/* USER CODE BEGIN PV */ 
 
/* USER CODE END PV */ 
 
/* Private function prototypes -----------------------------------------------*/ 
void SystemClock_Config(void); 
static void MX_GPIO_Init(void); 
static void MX_RTC_Init(void); 
static void MX_USART2_UART_Init(void); 
/* USER CODE BEGIN PFP */ 
 
/* USER CODE END PFP */ 
 
/* Private user code ---------------------------------------------------------*/ 
/* USER CODE BEGIN 0 */ 
 
/* USER CODE END 0 */ 
 
/** 
  * @brief  The application entry point. 
  * @retval int 
  */ 
int main(void) 
{ 
  /* USER CODE BEGIN 1 */ 
 
  /* USER CODE END 1 */ 
 
  /* MCU Configuration--------------------------------------------------------*/ 
 
  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */ 
  HAL_Init(); 
 
  /* USER CODE BEGIN Init */ 
 
  /* USER CODE END Init */ 
 
  /* Configure the system clock */ 
  SystemClock_Config(); 
 
  /* USER CODE BEGIN SysInit */ 
 
  /* USER CODE END SysInit */ 
 
  /* Initialize all configured peripherals */ 
  MX_GPIO_Init(); 
  MX_RTC_Init(); 
  MX_USART2_UART_Init(); 
  /* USER CODE BEGIN 2 */ 
 
  /* USER CODE END 2 */ 
 
  /* Infinite loop */ 
  char inst[2] = {'d', '1'}; 
  char resp = 'n'; 
 
  while (1) 
  { 
   HAL_UART_Receive(&huart2, (uint8_t*)inst, sizeof(inst), 500); 
 
     if(strcmp(inst, "cc") == 0) { 
                             HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET); 
                         HAL_Delay(200); 
                         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET); 
                         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET); 
                         HAL_Delay(200); 
                            HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET); 
                             HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_SET); 
                             HAL_Delay(200); 
                             HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_RESET); 
                             HAL_GPIO_WritePin(GPIOB, GPIO_PIN_11, GPIO_PIN_SET); 
                             HAL_Delay(200); 
                             HAL_GPIO_WritePin(GPIOB, GPIO_PIN_11, GPIO_PIN_RESET); 
      } 
     else if(strcmp(inst, "d1") == 0){ 
      HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET); 
      HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET); 
      HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_RESET); 
      HAL_GPIO_WritePin(GPIOB, GPIO_PIN_11, GPIO_PIN_RESET); 
      strcpy(resp, "k"); 
     } 
     else if(strcmp(inst, "d2") == 0){
